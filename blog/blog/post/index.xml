<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Manish Raj</title>
    <link>https://manishraj.dev/post/</link>
    <description>Recent content in Posts on Manish Raj</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019. All rights reserved.</copyright>
    <lastBuildDate>Wed, 27 Mar 2019 05:30:31 +0530</lastBuildDate>
    
	<atom:link href="https://manishraj.dev/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A quick glimpse of what&#39;s new in ES10</title>
      <link>https://manishraj.dev/post/a-quick-glimpse-of-whats-new-in-es10/</link>
      <pubDate>Wed, 27 Mar 2019 05:30:31 +0530</pubDate>
      
      <guid>https://manishraj.dev/post/a-quick-glimpse-of-whats-new-in-es10/</guid>
      <description>Here&amp;rsquo;s a quick glimpse of all the TS10 features, that are part of the spec and have already been shipped with the latest version of Chrome:
 Trim whitespaces only from start of a string
&amp;quot; My String &amp;quot;.trimStart() // Produces: &amp;quot;My String &amp;quot;  Trim whitespaces only from end of a string:
&amp;quot; My String &amp;quot;.trimEnd() // Produces: &amp;quot; My String&amp;quot;  Flatten an array:
[1, 2, 3, [4, [5, 6]]].</description>
    </item>
    
    <item>
      <title>Generate vector tiles with built-in postgis functions</title>
      <link>https://manishraj.dev/post/generate_vector_tiles_built_in_postgis_functions/</link>
      <pubDate>Sun, 03 Feb 2019 02:30:47 +0530</pubDate>
      
      <guid>https://manishraj.dev/post/generate_vector_tiles_built_in_postgis_functions/</guid>
      <description>This blog post explores the possibility of generating, caching and serving vector tiles on the fly, from a PostgreSQL database, using built-in PostGIS functions ST_AsMVT and ST_MakeEnvelope.
1. Setup a test database Let us begin by firing off a db instance. We use docker for this because of its easily reproducible and disposable nature. We also use docker-compose because we want to be able to orchestrate multiple containers such as database, caching and other services.</description>
    </item>
    
    <item>
      <title>Setting up Slash commands for Slack workspace</title>
      <link>https://manishraj.dev/post/slash-commands-for-slack-workspace/</link>
      <pubDate>Thu, 12 Oct 2017 22:11:46 +0530</pubDate>
      
      <guid>https://manishraj.dev/post/slash-commands-for-slack-workspace/</guid>
      <description>Slack has become one of the most popular chat and collaboration tool in software industry. Slack offers all kinds of custom integration, third party apps and a huge scope for automation of trivial every tasks.
In this post, we will try to set up a slash command /hello for our slack workspace that makes a request to a REST API and displays response back on the slack channel.
The REST API can then trigger other APIs, automate something trivial like initiating a project build or even book an uber.</description>
    </item>
    
    <item>
      <title>WebVR With A-Frame</title>
      <link>https://manishraj.dev/post/webvr-with-aframe/</link>
      <pubDate>Sat, 23 Sep 2017 13:41:37 +0530</pubDate>
      
      <guid>https://manishraj.dev/post/webvr-with-aframe/</guid>
      <description>WebVR WebVR is an emerging technology that enables virtual reality experience to be delivered and experienced from within a web browser. WebVR is mostly composed of experimental Javascript APIs supported by browsers such as Firefox and Chrome and VR headsets such as Oculus Rift, Google Daydream etc.
WebVR can be used to build all kinds of VR experiences such as presentations, stories, walk-through guides, maps, architectural design demos, games and anything else one can envision.</description>
    </item>
    
    <item>
      <title>Træfik, reverse proxy, HTTPs and more</title>
      <link>https://manishraj.dev/post/traefix_reverse_proxy_https_and_more/</link>
      <pubDate>Mon, 11 Sep 2017 00:43:32 +0530</pubDate>
      
      <guid>https://manishraj.dev/post/traefix_reverse_proxy_https_and_more/</guid>
      <description>I stumbled upon Træfik last week while working with a client. It is a lightweight, robust HTTP reverse proxy and load balancer.
Træfik is simple enough to get started with, within minutes and offers a variety of features such as:
 Deploy Traefik using a tiny go binary or docker image. Serve as a reverse proxy for multiple micro-services. Supports several back-end systems such as Docker, Kubernetes, Consul, Amazon ECS and more.</description>
    </item>
    
    <item>
      <title>Puppeteer - quick start guide</title>
      <link>https://manishraj.dev/post/puppeteer-quick-start/</link>
      <pubDate>Fri, 01 Sep 2017 13:43:32 +0530</pubDate>
      
      <guid>https://manishraj.dev/post/puppeteer-quick-start/</guid>
      <description>Puppeteer: quick start guide The team behind Google chrome has recently released puppeteer, a nodejs library for controlling Chrome headless. Chrome headless was first shipped with Chrome v59 and has been a huge success with browser automation and testing community.
This post is a guide to quickly getting started with puppeteer and headless chrome for browser automation, testing and web-scrapping.
Quick start Begin by installing nodejs version 7.6 or later.</description>
    </item>
    
  </channel>
</rss>